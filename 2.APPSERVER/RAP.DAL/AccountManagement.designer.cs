#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RAP.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="OAKRAP")]
	public partial class AccountManagementDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUserType(UserType instance);
    partial void UpdateUserType(UserType instance);
    partial void DeleteUserType(UserType instance);
    partial void InsertThirdPartyRepresentation(ThirdPartyRepresentation instance);
    partial void UpdateThirdPartyRepresentation(ThirdPartyRepresentation instance);
    partial void DeleteThirdPartyRepresentation(ThirdPartyRepresentation instance);
    partial void InsertCityAccountType(CityAccountType instance);
    partial void UpdateCityAccountType(CityAccountType instance);
    partial void DeleteCityAccountType(CityAccountType instance);
    partial void InsertCityUserAccount(CityUserAccount instance);
    partial void UpdateCityUserAccount(CityUserAccount instance);
    partial void DeleteCityUserAccount(CityUserAccount instance);
    partial void InsertCustomerDetail(CustomerDetail instance);
    partial void UpdateCustomerDetail(CustomerDetail instance);
    partial void DeleteCustomerDetail(CustomerDetail instance);
    partial void InsertMailingAddress(MailingAddress instance);
    partial void UpdateMailingAddress(MailingAddress instance);
    partial void DeleteMailingAddress(MailingAddress instance);
    partial void InsertNotificationPreference(NotificationPreference instance);
    partial void UpdateNotificationPreference(NotificationPreference instance);
    partial void DeleteNotificationPreference(NotificationPreference instance);
    #endregion
		
		public AccountManagementDataContext() : 
				base(global::RAP.DAL.Properties.Settings.Default.OAKRAPConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AccountManagementDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AccountManagementDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AccountManagementDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AccountManagementDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<UserType> UserTypes
		{
			get
			{
				return this.GetTable<UserType>();
			}
		}
		
		public System.Data.Linq.Table<ThirdPartyRepresentation> ThirdPartyRepresentations
		{
			get
			{
				return this.GetTable<ThirdPartyRepresentation>();
			}
		}
		
		public System.Data.Linq.Table<CityAccountType> CityAccountTypes
		{
			get
			{
				return this.GetTable<CityAccountType>();
			}
		}
		
		public System.Data.Linq.Table<ReturnAccountSearch> ReturnAccountSearches
		{
			get
			{
				return this.GetTable<ReturnAccountSearch>();
			}
		}
		
		public System.Data.Linq.Table<CityUserAccount> CityUserAccounts
		{
			get
			{
				return this.GetTable<CityUserAccount>();
			}
		}
		
		public System.Data.Linq.Table<CustomerDetail> CustomerDetails
		{
			get
			{
				return this.GetTable<CustomerDetail>();
			}
		}
		
		public System.Data.Linq.Table<MailingAddress> MailingAddresses
		{
			get
			{
				return this.GetTable<MailingAddress>();
			}
		}
		
		public System.Data.Linq.Table<NotificationPreference> NotificationPreferences
		{
			get
			{
				return this.GetTable<NotificationPreference>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_SearchAccount_Get")]
		public ISingleResult<ReturnAccountSearch> USP_SearchAccount_Get(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AcctType", DbType="Int")] System.Nullable<int> acctType, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FirstName", DbType="VarChar(25)")] string firstName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastName", DbType="VarChar(25)")] string lastName, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="VarChar(35)")] string email, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="APNNumber", DbType="Int")] System.Nullable<int> aPNNumber, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FromDate", DbType="DateTime")] System.Nullable<System.DateTime> fromDate, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ToDate", DbType="DateTime")] System.Nullable<System.DateTime> toDate, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AddressLine1", DbType="VarChar(25)")] string addressLine1, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="AddressLine2", DbType="VarChar(25)")] string addressLine2, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="City", DbType="VarChar(20)")] string city, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Zip", DbType="Int")] System.Nullable<int> zip, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PhoneNumber", DbType="VarChar(15)")] string phoneNumber, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortBy", DbType="VarChar(50)")] string sortBy, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SortReverse", DbType="Bit")] System.Nullable<bool> sortReverse, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PageSize", DbType="Int")] System.Nullable<int> pageSize, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CurrentPage", DbType="Int")] System.Nullable<int> currentPage, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalCount", DbType="Int")] ref System.Nullable<int> totalCount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Message", DbType="VarChar(MAX)")] ref string message)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), acctType, firstName, lastName, email, aPNNumber, fromDate, toDate, addressLine1, addressLine2, city, zip, phoneNumber, sortBy, sortReverse, pageSize, currentPage, totalCount, message);
			totalCount = ((System.Nullable<int>)(result.GetParameterValue(16)));
			message = ((string)(result.GetParameterValue(17)));
			return ((ISingleResult<ReturnAccountSearch>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserType")]
	public partial class UserType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserTypeID;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserTypeIDChanging(int value);
    partial void OnUserTypeIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public UserType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserTypeID
		{
			get
			{
				return this._UserTypeID;
			}
			set
			{
				if ((this._UserTypeID != value))
				{
					this.OnUserTypeIDChanging(value);
					this.SendPropertyChanging();
					this._UserTypeID = value;
					this.SendPropertyChanged("UserTypeID");
					this.OnUserTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(20)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThirdPartyRepresentation")]
	public partial class ThirdPartyRepresentation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ThirdPartyRepresentationID;
		
		private int _CustomerID;
		
		private int _ThirdPartyCustomerID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<bool> _IsDeleted;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntityRef<CustomerDetail> _CustomerDetail;
		
		private EntityRef<CustomerDetail> _CustomerDetail1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnThirdPartyRepresentationIDChanging(int value);
    partial void OnThirdPartyRepresentationIDChanged();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnThirdPartyCustomerIDChanging(int value);
    partial void OnThirdPartyCustomerIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public ThirdPartyRepresentation()
		{
			this._CustomerDetail = default(EntityRef<CustomerDetail>);
			this._CustomerDetail1 = default(EntityRef<CustomerDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThirdPartyRepresentationID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ThirdPartyRepresentationID
		{
			get
			{
				return this._ThirdPartyRepresentationID;
			}
			set
			{
				if ((this._ThirdPartyRepresentationID != value))
				{
					this.OnThirdPartyRepresentationIDChanging(value);
					this.SendPropertyChanging();
					this._ThirdPartyRepresentationID = value;
					this.SendPropertyChanged("ThirdPartyRepresentationID");
					this.OnThirdPartyRepresentationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._CustomerDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThirdPartyCustomerID", DbType="Int NOT NULL")]
		public int ThirdPartyCustomerID
		{
			get
			{
				return this._ThirdPartyCustomerID;
			}
			set
			{
				if ((this._ThirdPartyCustomerID != value))
				{
					if (this._CustomerDetail1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnThirdPartyCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._ThirdPartyCustomerID = value;
					this.SendPropertyChanged("ThirdPartyCustomerID");
					this.OnThirdPartyCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerDetail_ThirdPartyRepresentation", Storage="_CustomerDetail", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true)]
		public CustomerDetail CustomerDetail
		{
			get
			{
				return this._CustomerDetail.Entity;
			}
			set
			{
				CustomerDetail previousValue = this._CustomerDetail.Entity;
				if (((previousValue != value) 
							|| (this._CustomerDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerDetail.Entity = null;
						previousValue.ThirdPartyRepresentation = null;
					}
					this._CustomerDetail.Entity = value;
					if ((value != null))
					{
						value.ThirdPartyRepresentation = this;
						this._CustomerID = value.CustomerID;
					}
					else
					{
						this._CustomerID = default(int);
					}
					this.SendPropertyChanged("CustomerDetail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerDetail_ThirdPartyRepresentation1", Storage="_CustomerDetail1", ThisKey="ThirdPartyCustomerID", OtherKey="CustomerID", IsForeignKey=true)]
		public CustomerDetail CustomerDetail1
		{
			get
			{
				return this._CustomerDetail1.Entity;
			}
			set
			{
				CustomerDetail previousValue = this._CustomerDetail1.Entity;
				if (((previousValue != value) 
							|| (this._CustomerDetail1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerDetail1.Entity = null;
						previousValue.ThirdPartyRepresentations.Remove(this);
					}
					this._CustomerDetail1.Entity = value;
					if ((value != null))
					{
						value.ThirdPartyRepresentations.Add(this);
						this._ThirdPartyCustomerID = value.CustomerID;
					}
					else
					{
						this._ThirdPartyCustomerID = default(int);
					}
					this.SendPropertyChanged("CustomerDetail1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CityAccountType")]
	public partial class CityAccountType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CityAccountTypeID;
		
		private string _CityAccountTypeDesc;
		
		private EntitySet<CityUserAccount> _CityUserAccounts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCityAccountTypeIDChanging(int value);
    partial void OnCityAccountTypeIDChanged();
    partial void OnCityAccountTypeDescChanging(string value);
    partial void OnCityAccountTypeDescChanged();
    #endregion
		
		public CityAccountType()
		{
			this._CityUserAccounts = new EntitySet<CityUserAccount>(new Action<CityUserAccount>(this.attach_CityUserAccounts), new Action<CityUserAccount>(this.detach_CityUserAccounts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityAccountTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CityAccountTypeID
		{
			get
			{
				return this._CityAccountTypeID;
			}
			set
			{
				if ((this._CityAccountTypeID != value))
				{
					this.OnCityAccountTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CityAccountTypeID = value;
					this.SendPropertyChanged("CityAccountTypeID");
					this.OnCityAccountTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityAccountTypeDesc", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CityAccountTypeDesc
		{
			get
			{
				return this._CityAccountTypeDesc;
			}
			set
			{
				if ((this._CityAccountTypeDesc != value))
				{
					this.OnCityAccountTypeDescChanging(value);
					this.SendPropertyChanging();
					this._CityAccountTypeDesc = value;
					this.SendPropertyChanged("CityAccountTypeDesc");
					this.OnCityAccountTypeDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CityAccountType_CityUserAccount", Storage="_CityUserAccounts", ThisKey="CityAccountTypeID", OtherKey="CityAccountTypeID")]
		public EntitySet<CityUserAccount> CityUserAccounts
		{
			get
			{
				return this._CityUserAccounts;
			}
			set
			{
				this._CityUserAccounts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CityUserAccounts(CityUserAccount entity)
		{
			this.SendPropertyChanging();
			entity.CityAccountType = this;
		}
		
		private void detach_CityUserAccounts(CityUserAccount entity)
		{
			this.SendPropertyChanging();
			entity.CityAccountType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReturnAccountSearch")]
	public partial class ReturnAccountSearch
	{
		
		private System.Nullable<int> _RankNo;
		
		private string _Name;
		
		private string _AcctTypeDesc;
		
		private string _Email;
		
		private System.Nullable<int> _CustomerID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		public ReturnAccountSearch()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RankNo", DbType="Int")]
		public System.Nullable<int> RankNo
		{
			get
			{
				return this._RankNo;
			}
			set
			{
				if ((this._RankNo != value))
				{
					this._RankNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcctTypeDesc", DbType="VarChar(25)")]
		public string AcctTypeDesc
		{
			get
			{
				return this._AcctTypeDesc;
			}
			set
			{
				if ((this._AcctTypeDesc != value))
				{
					this._AcctTypeDesc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(35)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int")]
		public System.Nullable<int> CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this._CustomerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CityUserAccount")]
	public partial class CityUserAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CityUserID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Email;
		
		private int _CityAccountTypeID;
		
		private System.Nullable<int> _EmployeeID;
		
		private string _Password;
		
		private bool _IsAnalyst;
		
		private bool _IsHearingOfficer;
		
		private string _Title;
		
		private string _Department;
		
		private string _OfficeLocation;
		
		private string _OfficePhoneNumber;
		
		private string _MobilePhoneNumber;
		
		private System.DateTime _CreatedDate;
		
		private EntityRef<CityAccountType> _CityAccountType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCityUserIDChanging(int value);
    partial void OnCityUserIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCityAccountTypeIDChanging(int value);
    partial void OnCityAccountTypeIDChanged();
    partial void OnEmployeeIDChanging(System.Nullable<int> value);
    partial void OnEmployeeIDChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnIsAnalystChanging(bool value);
    partial void OnIsAnalystChanged();
    partial void OnIsHearingOfficerChanging(bool value);
    partial void OnIsHearingOfficerChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDepartmentChanging(string value);
    partial void OnDepartmentChanged();
    partial void OnOfficeLocationChanging(string value);
    partial void OnOfficeLocationChanged();
    partial void OnOfficePhoneNumberChanging(string value);
    partial void OnOfficePhoneNumberChanged();
    partial void OnMobilePhoneNumberChanging(string value);
    partial void OnMobilePhoneNumberChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public CityUserAccount()
		{
			this._CityAccountType = default(EntityRef<CityAccountType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityUserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CityUserID
		{
			get
			{
				return this._CityUserID;
			}
			set
			{
				if ((this._CityUserID != value))
				{
					this.OnCityUserIDChanging(value);
					this.SendPropertyChanging();
					this._CityUserID = value;
					this.SendPropertyChanged("CityUserID");
					this.OnCityUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(25)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityAccountTypeID", DbType="Int NOT NULL")]
		public int CityAccountTypeID
		{
			get
			{
				return this._CityAccountTypeID;
			}
			set
			{
				if ((this._CityAccountTypeID != value))
				{
					if (this._CityAccountType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCityAccountTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CityAccountTypeID = value;
					this.SendPropertyChanged("CityAccountTypeID");
					this.OnCityAccountTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int")]
		public System.Nullable<int> EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnalyst", DbType="Bit NOT NULL")]
		public bool IsAnalyst
		{
			get
			{
				return this._IsAnalyst;
			}
			set
			{
				if ((this._IsAnalyst != value))
				{
					this.OnIsAnalystChanging(value);
					this.SendPropertyChanging();
					this._IsAnalyst = value;
					this.SendPropertyChanged("IsAnalyst");
					this.OnIsAnalystChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHearingOfficer", DbType="Bit NOT NULL")]
		public bool IsHearingOfficer
		{
			get
			{
				return this._IsHearingOfficer;
			}
			set
			{
				if ((this._IsHearingOfficer != value))
				{
					this.OnIsHearingOfficerChanging(value);
					this.SendPropertyChanging();
					this._IsHearingOfficer = value;
					this.SendPropertyChanged("IsHearingOfficer");
					this.OnIsHearingOfficerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(25)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="VarChar(25)")]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this.OnDepartmentChanging(value);
					this.SendPropertyChanging();
					this._Department = value;
					this.SendPropertyChanged("Department");
					this.OnDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeLocation", DbType="VarChar(25)")]
		public string OfficeLocation
		{
			get
			{
				return this._OfficeLocation;
			}
			set
			{
				if ((this._OfficeLocation != value))
				{
					this.OnOfficeLocationChanging(value);
					this.SendPropertyChanging();
					this._OfficeLocation = value;
					this.SendPropertyChanged("OfficeLocation");
					this.OnOfficeLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficePhoneNumber", DbType="VarChar(15)")]
		public string OfficePhoneNumber
		{
			get
			{
				return this._OfficePhoneNumber;
			}
			set
			{
				if ((this._OfficePhoneNumber != value))
				{
					this.OnOfficePhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._OfficePhoneNumber = value;
					this.SendPropertyChanged("OfficePhoneNumber");
					this.OnOfficePhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePhoneNumber", DbType="VarChar(15)")]
		public string MobilePhoneNumber
		{
			get
			{
				return this._MobilePhoneNumber;
			}
			set
			{
				if ((this._MobilePhoneNumber != value))
				{
					this.OnMobilePhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._MobilePhoneNumber = value;
					this.SendPropertyChanged("MobilePhoneNumber");
					this.OnMobilePhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CityAccountType_CityUserAccount", Storage="_CityAccountType", ThisKey="CityAccountTypeID", OtherKey="CityAccountTypeID", IsForeignKey=true)]
		public CityAccountType CityAccountType
		{
			get
			{
				return this._CityAccountType.Entity;
			}
			set
			{
				CityAccountType previousValue = this._CityAccountType.Entity;
				if (((previousValue != value) 
							|| (this._CityAccountType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CityAccountType.Entity = null;
						previousValue.CityUserAccounts.Remove(this);
					}
					this._CityAccountType.Entity = value;
					if ((value != null))
					{
						value.CityUserAccounts.Add(this);
						this._CityAccountTypeID = value.CityAccountTypeID;
					}
					else
					{
						this._CityAccountTypeID = default(int);
					}
					this.SendPropertyChanged("CityAccountType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerDetails")]
	public partial class CustomerDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerID;
		
		private string _Email;
		
		private System.Nullable<int> _UserID;
		
		private string _Password;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<int> _CustomerIdentityKey;
		
		private System.Nullable<bool> _bMailingAddress;
		
		private System.Nullable<bool> _bParcelAddress;
		
		private EntityRef<ThirdPartyRepresentation> _ThirdPartyRepresentation;
		
		private EntitySet<ThirdPartyRepresentation> _ThirdPartyRepresentations;
		
		private EntityRef<CustomerDetail> _CustomerDetail2;
		
		private EntitySet<MailingAddress> _MailingAddresses;
		
		private EntityRef<CustomerDetail> _CustomerDetail1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnCustomerIdentityKeyChanging(System.Nullable<int> value);
    partial void OnCustomerIdentityKeyChanged();
    partial void OnbMailingAddressChanging(System.Nullable<bool> value);
    partial void OnbMailingAddressChanged();
    partial void OnbParcelAddressChanging(System.Nullable<bool> value);
    partial void OnbParcelAddressChanged();
    #endregion
		
		public CustomerDetail()
		{
			this._ThirdPartyRepresentation = default(EntityRef<ThirdPartyRepresentation>);
			this._ThirdPartyRepresentations = new EntitySet<ThirdPartyRepresentation>(new Action<ThirdPartyRepresentation>(this.attach_ThirdPartyRepresentations), new Action<ThirdPartyRepresentation>(this.detach_ThirdPartyRepresentations));
			this._CustomerDetail2 = default(EntityRef<CustomerDetail>);
			this._MailingAddresses = new EntitySet<MailingAddress>(new Action<MailingAddress>(this.attach_MailingAddresses), new Action<MailingAddress>(this.detach_MailingAddresses));
			this._CustomerDetail1 = default(EntityRef<CustomerDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._CustomerDetail1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(35) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerIdentityKey", DbType="Int")]
		public System.Nullable<int> CustomerIdentityKey
		{
			get
			{
				return this._CustomerIdentityKey;
			}
			set
			{
				if ((this._CustomerIdentityKey != value))
				{
					this.OnCustomerIdentityKeyChanging(value);
					this.SendPropertyChanging();
					this._CustomerIdentityKey = value;
					this.SendPropertyChanged("CustomerIdentityKey");
					this.OnCustomerIdentityKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bMailingAddress", DbType="Bit")]
		public System.Nullable<bool> bMailingAddress
		{
			get
			{
				return this._bMailingAddress;
			}
			set
			{
				if ((this._bMailingAddress != value))
				{
					this.OnbMailingAddressChanging(value);
					this.SendPropertyChanging();
					this._bMailingAddress = value;
					this.SendPropertyChanged("bMailingAddress");
					this.OnbMailingAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bParcelAddress", DbType="Bit")]
		public System.Nullable<bool> bParcelAddress
		{
			get
			{
				return this._bParcelAddress;
			}
			set
			{
				if ((this._bParcelAddress != value))
				{
					this.OnbParcelAddressChanging(value);
					this.SendPropertyChanging();
					this._bParcelAddress = value;
					this.SendPropertyChanged("bParcelAddress");
					this.OnbParcelAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerDetail_ThirdPartyRepresentation", Storage="_ThirdPartyRepresentation", ThisKey="CustomerID", OtherKey="CustomerID", IsUnique=true, IsForeignKey=false)]
		public ThirdPartyRepresentation ThirdPartyRepresentation
		{
			get
			{
				return this._ThirdPartyRepresentation.Entity;
			}
			set
			{
				ThirdPartyRepresentation previousValue = this._ThirdPartyRepresentation.Entity;
				if (((previousValue != value) 
							|| (this._ThirdPartyRepresentation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThirdPartyRepresentation.Entity = null;
						previousValue.CustomerDetail = null;
					}
					this._ThirdPartyRepresentation.Entity = value;
					if ((value != null))
					{
						value.CustomerDetail = this;
					}
					this.SendPropertyChanged("ThirdPartyRepresentation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerDetail_ThirdPartyRepresentation1", Storage="_ThirdPartyRepresentations", ThisKey="CustomerID", OtherKey="ThirdPartyCustomerID")]
		public EntitySet<ThirdPartyRepresentation> ThirdPartyRepresentations
		{
			get
			{
				return this._ThirdPartyRepresentations;
			}
			set
			{
				this._ThirdPartyRepresentations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerDetail_CustomerDetail", Storage="_CustomerDetail2", ThisKey="CustomerID", OtherKey="CustomerID", IsUnique=true, IsForeignKey=false)]
		public CustomerDetail CustomerDetail2
		{
			get
			{
				return this._CustomerDetail2.Entity;
			}
			set
			{
				CustomerDetail previousValue = this._CustomerDetail2.Entity;
				if (((previousValue != value) 
							|| (this._CustomerDetail2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerDetail2.Entity = null;
						previousValue.CustomerDetail1 = null;
					}
					this._CustomerDetail2.Entity = value;
					if ((value != null))
					{
						value.CustomerDetail1 = this;
					}
					this.SendPropertyChanged("CustomerDetail2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerDetail_MailingAddress", Storage="_MailingAddresses", ThisKey="CustomerID", OtherKey="CustomerID")]
		public EntitySet<MailingAddress> MailingAddresses
		{
			get
			{
				return this._MailingAddresses;
			}
			set
			{
				this._MailingAddresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerDetail_CustomerDetail", Storage="_CustomerDetail1", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true)]
		public CustomerDetail CustomerDetail1
		{
			get
			{
				return this._CustomerDetail1.Entity;
			}
			set
			{
				CustomerDetail previousValue = this._CustomerDetail1.Entity;
				if (((previousValue != value) 
							|| (this._CustomerDetail1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerDetail1.Entity = null;
						previousValue.CustomerDetail2 = null;
					}
					this._CustomerDetail1.Entity = value;
					if ((value != null))
					{
						value.CustomerDetail2 = this;
						this._CustomerID = value.CustomerID;
					}
					else
					{
						this._CustomerID = default(int);
					}
					this.SendPropertyChanged("CustomerDetail1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ThirdPartyRepresentations(ThirdPartyRepresentation entity)
		{
			this.SendPropertyChanging();
			entity.CustomerDetail1 = this;
		}
		
		private void detach_ThirdPartyRepresentations(ThirdPartyRepresentation entity)
		{
			this.SendPropertyChanging();
			entity.CustomerDetail1 = null;
		}
		
		private void attach_MailingAddresses(MailingAddress entity)
		{
			this.SendPropertyChanging();
			entity.CustomerDetail = this;
		}
		
		private void detach_MailingAddresses(MailingAddress entity)
		{
			this.SendPropertyChanging();
			entity.CustomerDetail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MailingAddress")]
	public partial class MailingAddress : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MailingID;
		
		private int _CustomerID;
		
		private string _AddressLine1;
		
		private string _AddressLine2;
		
		private string _City;
		
		private int _StateID;
		
		private int _Zip;
		
		private string _PhoneNumber;
		
		private System.Nullable<System.DateTime> _LastModifiedDate;
		
		private EntityRef<CustomerDetail> _CustomerDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMailingIDChanging(int value);
    partial void OnMailingIDChanged();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnAddressLine1Changing(string value);
    partial void OnAddressLine1Changed();
    partial void OnAddressLine2Changing(string value);
    partial void OnAddressLine2Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateIDChanging(int value);
    partial void OnStateIDChanged();
    partial void OnZipChanging(int value);
    partial void OnZipChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnLastModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedDateChanged();
    #endregion
		
		public MailingAddress()
		{
			this._CustomerDetail = default(EntityRef<CustomerDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailingID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MailingID
		{
			get
			{
				return this._MailingID;
			}
			set
			{
				if ((this._MailingID != value))
				{
					this.OnMailingIDChanging(value);
					this.SendPropertyChanging();
					this._MailingID = value;
					this.SendPropertyChanged("MailingID");
					this.OnMailingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._CustomerDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressLine1", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string AddressLine1
		{
			get
			{
				return this._AddressLine1;
			}
			set
			{
				if ((this._AddressLine1 != value))
				{
					this.OnAddressLine1Changing(value);
					this.SendPropertyChanging();
					this._AddressLine1 = value;
					this.SendPropertyChanged("AddressLine1");
					this.OnAddressLine1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressLine2", DbType="VarChar(25)")]
		public string AddressLine2
		{
			get
			{
				return this._AddressLine2;
			}
			set
			{
				if ((this._AddressLine2 != value))
				{
					this.OnAddressLine2Changing(value);
					this.SendPropertyChanging();
					this._AddressLine2 = value;
					this.SendPropertyChanged("AddressLine2");
					this.OnAddressLine2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int NOT NULL")]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this.OnStateIDChanging(value);
					this.SendPropertyChanging();
					this._StateID = value;
					this.SendPropertyChanged("StateID");
					this.OnStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="Int NOT NULL")]
		public int Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(15)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerDetail_MailingAddress", Storage="_CustomerDetail", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true)]
		public CustomerDetail CustomerDetail
		{
			get
			{
				return this._CustomerDetail.Entity;
			}
			set
			{
				CustomerDetail previousValue = this._CustomerDetail.Entity;
				if (((previousValue != value) 
							|| (this._CustomerDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerDetail.Entity = null;
						previousValue.MailingAddresses.Remove(this);
					}
					this._CustomerDetail.Entity = value;
					if ((value != null))
					{
						value.MailingAddresses.Add(this);
						this._CustomerID = value.CustomerID;
					}
					else
					{
						this._CustomerID = default(int);
					}
					this.SendPropertyChanged("CustomerDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NotificationPreference")]
	public partial class NotificationPreference : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NotificationPreferenceID;
		
		private int _UserID;
		
		private bool _EmailNotification;
		
		private bool _MailNotification;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNotificationPreferenceIDChanging(int value);
    partial void OnNotificationPreferenceIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnEmailNotificationChanging(bool value);
    partial void OnEmailNotificationChanged();
    partial void OnMailNotificationChanging(bool value);
    partial void OnMailNotificationChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public NotificationPreference()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationPreferenceID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int NotificationPreferenceID
		{
			get
			{
				return this._NotificationPreferenceID;
			}
			set
			{
				if ((this._NotificationPreferenceID != value))
				{
					this.OnNotificationPreferenceIDChanging(value);
					this.SendPropertyChanging();
					this._NotificationPreferenceID = value;
					this.SendPropertyChanged("NotificationPreferenceID");
					this.OnNotificationPreferenceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailNotification", DbType="Bit NOT NULL")]
		public bool EmailNotification
		{
			get
			{
				return this._EmailNotification;
			}
			set
			{
				if ((this._EmailNotification != value))
				{
					this.OnEmailNotificationChanging(value);
					this.SendPropertyChanging();
					this._EmailNotification = value;
					this.SendPropertyChanged("EmailNotification");
					this.OnEmailNotificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailNotification", DbType="Bit NOT NULL")]
		public bool MailNotification
		{
			get
			{
				return this._MailNotification;
			}
			set
			{
				if ((this._MailNotification != value))
				{
					this.OnMailNotificationChanging(value);
					this.SendPropertyChanging();
					this._MailNotification = value;
					this.SendPropertyChanged("MailNotification");
					this.OnMailNotificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
