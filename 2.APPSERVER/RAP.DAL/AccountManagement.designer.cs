#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RAP.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="OAKRAP")]
	public partial class AccountManagementDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUserType(UserType instance);
    partial void UpdateUserType(UserType instance);
    partial void DeleteUserType(UserType instance);
    partial void InsertNotificationPreference(NotificationPreference instance);
    partial void UpdateNotificationPreference(NotificationPreference instance);
    partial void DeleteNotificationPreference(NotificationPreference instance);
    partial void InsertThirdPartyRepresentation(ThirdPartyRepresentation instance);
    partial void UpdateThirdPartyRepresentation(ThirdPartyRepresentation instance);
    partial void DeleteThirdPartyRepresentation(ThirdPartyRepresentation instance);
    partial void InsertCustomerDetail(CustomerDetail instance);
    partial void UpdateCustomerDetail(CustomerDetail instance);
    partial void DeleteCustomerDetail(CustomerDetail instance);
    #endregion
		
		public AccountManagementDataContext() : 
				base(global::RAP.DAL.Properties.Settings.Default.OAKRAPConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AccountManagementDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AccountManagementDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AccountManagementDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AccountManagementDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<UserType> UserTypes
		{
			get
			{
				return this.GetTable<UserType>();
			}
		}
		
		public System.Data.Linq.Table<NotificationPreference> NotificationPreferences
		{
			get
			{
				return this.GetTable<NotificationPreference>();
			}
		}
		
		public System.Data.Linq.Table<ThirdPartyRepresentation> ThirdPartyRepresentations
		{
			get
			{
				return this.GetTable<ThirdPartyRepresentation>();
			}
		}
		
		public System.Data.Linq.Table<CustomerDetail> CustomerDetails
		{
			get
			{
				return this.GetTable<CustomerDetail>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserType")]
	public partial class UserType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserTypeID;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserTypeIDChanging(int value);
    partial void OnUserTypeIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public UserType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserTypeID
		{
			get
			{
				return this._UserTypeID;
			}
			set
			{
				if ((this._UserTypeID != value))
				{
					this.OnUserTypeIDChanging(value);
					this.SendPropertyChanging();
					this._UserTypeID = value;
					this.SendPropertyChanged("UserTypeID");
					this.OnUserTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(20)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NotificationPreference")]
	public partial class NotificationPreference : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NotificationPreferenceID;
		
		private int _CustomerID;
		
		private bool _EmailNotification;
		
		private bool _MailNotification;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private EntityRef<CustomerDetail> _CustomerDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNotificationPreferenceIDChanging(int value);
    partial void OnNotificationPreferenceIDChanged();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnEmailNotificationChanging(bool value);
    partial void OnEmailNotificationChanged();
    partial void OnMailNotificationChanging(bool value);
    partial void OnMailNotificationChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public NotificationPreference()
		{
			this._CustomerDetail = default(EntityRef<CustomerDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationPreferenceID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int NotificationPreferenceID
		{
			get
			{
				return this._NotificationPreferenceID;
			}
			set
			{
				if ((this._NotificationPreferenceID != value))
				{
					this.OnNotificationPreferenceIDChanging(value);
					this.SendPropertyChanging();
					this._NotificationPreferenceID = value;
					this.SendPropertyChanged("NotificationPreferenceID");
					this.OnNotificationPreferenceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._CustomerDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailNotification", DbType="Bit NOT NULL")]
		public bool EmailNotification
		{
			get
			{
				return this._EmailNotification;
			}
			set
			{
				if ((this._EmailNotification != value))
				{
					this.OnEmailNotificationChanging(value);
					this.SendPropertyChanging();
					this._EmailNotification = value;
					this.SendPropertyChanged("EmailNotification");
					this.OnEmailNotificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailNotification", DbType="Bit NOT NULL")]
		public bool MailNotification
		{
			get
			{
				return this._MailNotification;
			}
			set
			{
				if ((this._MailNotification != value))
				{
					this.OnMailNotificationChanging(value);
					this.SendPropertyChanging();
					this._MailNotification = value;
					this.SendPropertyChanged("MailNotification");
					this.OnMailNotificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerDetail_NotificationPreference", Storage="_CustomerDetail", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true)]
		public CustomerDetail CustomerDetail
		{
			get
			{
				return this._CustomerDetail.Entity;
			}
			set
			{
				CustomerDetail previousValue = this._CustomerDetail.Entity;
				if (((previousValue != value) 
							|| (this._CustomerDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerDetail.Entity = null;
						previousValue.NotificationPreference = null;
					}
					this._CustomerDetail.Entity = value;
					if ((value != null))
					{
						value.NotificationPreference = this;
						this._CustomerID = value.CustomerID;
					}
					else
					{
						this._CustomerID = default(int);
					}
					this.SendPropertyChanged("CustomerDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThirdPartyRepresentation")]
	public partial class ThirdPartyRepresentation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ThirdPartyRepresentationID;
		
		private int _CustomerID;
		
		private int _ThirdPartyCustomerID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<bool> _IsDeleted;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntityRef<CustomerDetail> _CustomerDetail;
		
		private EntityRef<CustomerDetail> _CustomerDetail1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnThirdPartyRepresentationIDChanging(int value);
    partial void OnThirdPartyRepresentationIDChanged();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnThirdPartyCustomerIDChanging(int value);
    partial void OnThirdPartyCustomerIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public ThirdPartyRepresentation()
		{
			this._CustomerDetail = default(EntityRef<CustomerDetail>);
			this._CustomerDetail1 = default(EntityRef<CustomerDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThirdPartyRepresentationID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ThirdPartyRepresentationID
		{
			get
			{
				return this._ThirdPartyRepresentationID;
			}
			set
			{
				if ((this._ThirdPartyRepresentationID != value))
				{
					this.OnThirdPartyRepresentationIDChanging(value);
					this.SendPropertyChanging();
					this._ThirdPartyRepresentationID = value;
					this.SendPropertyChanged("ThirdPartyRepresentationID");
					this.OnThirdPartyRepresentationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._CustomerDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThirdPartyCustomerID", DbType="Int NOT NULL")]
		public int ThirdPartyCustomerID
		{
			get
			{
				return this._ThirdPartyCustomerID;
			}
			set
			{
				if ((this._ThirdPartyCustomerID != value))
				{
					if (this._CustomerDetail1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnThirdPartyCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._ThirdPartyCustomerID = value;
					this.SendPropertyChanged("ThirdPartyCustomerID");
					this.OnThirdPartyCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerDetail_ThirdPartyRepresentation", Storage="_CustomerDetail", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true)]
		public CustomerDetail CustomerDetail
		{
			get
			{
				return this._CustomerDetail.Entity;
			}
			set
			{
				CustomerDetail previousValue = this._CustomerDetail.Entity;
				if (((previousValue != value) 
							|| (this._CustomerDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerDetail.Entity = null;
						previousValue.ThirdPartyRepresentation = null;
					}
					this._CustomerDetail.Entity = value;
					if ((value != null))
					{
						value.ThirdPartyRepresentation = this;
						this._CustomerID = value.CustomerID;
					}
					else
					{
						this._CustomerID = default(int);
					}
					this.SendPropertyChanged("CustomerDetail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerDetail_ThirdPartyRepresentation1", Storage="_CustomerDetail1", ThisKey="ThirdPartyCustomerID", OtherKey="CustomerID", IsForeignKey=true)]
		public CustomerDetail CustomerDetail1
		{
			get
			{
				return this._CustomerDetail1.Entity;
			}
			set
			{
				CustomerDetail previousValue = this._CustomerDetail1.Entity;
				if (((previousValue != value) 
							|| (this._CustomerDetail1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerDetail1.Entity = null;
						previousValue.ThirdPartyRepresentations.Remove(this);
					}
					this._CustomerDetail1.Entity = value;
					if ((value != null))
					{
						value.ThirdPartyRepresentations.Add(this);
						this._ThirdPartyCustomerID = value.CustomerID;
					}
					else
					{
						this._ThirdPartyCustomerID = default(int);
					}
					this.SendPropertyChanged("CustomerDetail1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerDetails")]
	public partial class CustomerDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerID;
		
		private string _Email;
		
		private System.Nullable<int> _UserID;
		
		private string _Password;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<int> _CustomerIdentityKey;
		
		private EntityRef<NotificationPreference> _NotificationPreference;
		
		private EntityRef<ThirdPartyRepresentation> _ThirdPartyRepresentation;
		
		private EntitySet<ThirdPartyRepresentation> _ThirdPartyRepresentations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnCustomerIdentityKeyChanging(System.Nullable<int> value);
    partial void OnCustomerIdentityKeyChanged();
    #endregion
		
		public CustomerDetail()
		{
			this._NotificationPreference = default(EntityRef<NotificationPreference>);
			this._ThirdPartyRepresentation = default(EntityRef<ThirdPartyRepresentation>);
			this._ThirdPartyRepresentations = new EntitySet<ThirdPartyRepresentation>(new Action<ThirdPartyRepresentation>(this.attach_ThirdPartyRepresentations), new Action<ThirdPartyRepresentation>(this.detach_ThirdPartyRepresentations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(35) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerIdentityKey", DbType="Int")]
		public System.Nullable<int> CustomerIdentityKey
		{
			get
			{
				return this._CustomerIdentityKey;
			}
			set
			{
				if ((this._CustomerIdentityKey != value))
				{
					this.OnCustomerIdentityKeyChanging(value);
					this.SendPropertyChanging();
					this._CustomerIdentityKey = value;
					this.SendPropertyChanged("CustomerIdentityKey");
					this.OnCustomerIdentityKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerDetail_NotificationPreference", Storage="_NotificationPreference", ThisKey="CustomerID", OtherKey="CustomerID", IsUnique=true, IsForeignKey=false)]
		public NotificationPreference NotificationPreference
		{
			get
			{
				return this._NotificationPreference.Entity;
			}
			set
			{
				NotificationPreference previousValue = this._NotificationPreference.Entity;
				if (((previousValue != value) 
							|| (this._NotificationPreference.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NotificationPreference.Entity = null;
						previousValue.CustomerDetail = null;
					}
					this._NotificationPreference.Entity = value;
					if ((value != null))
					{
						value.CustomerDetail = this;
					}
					this.SendPropertyChanged("NotificationPreference");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerDetail_ThirdPartyRepresentation", Storage="_ThirdPartyRepresentation", ThisKey="CustomerID", OtherKey="CustomerID", IsUnique=true, IsForeignKey=false)]
		public ThirdPartyRepresentation ThirdPartyRepresentation
		{
			get
			{
				return this._ThirdPartyRepresentation.Entity;
			}
			set
			{
				ThirdPartyRepresentation previousValue = this._ThirdPartyRepresentation.Entity;
				if (((previousValue != value) 
							|| (this._ThirdPartyRepresentation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThirdPartyRepresentation.Entity = null;
						previousValue.CustomerDetail = null;
					}
					this._ThirdPartyRepresentation.Entity = value;
					if ((value != null))
					{
						value.CustomerDetail = this;
					}
					this.SendPropertyChanged("ThirdPartyRepresentation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerDetail_ThirdPartyRepresentation1", Storage="_ThirdPartyRepresentations", ThisKey="CustomerID", OtherKey="ThirdPartyCustomerID")]
		public EntitySet<ThirdPartyRepresentation> ThirdPartyRepresentations
		{
			get
			{
				return this._ThirdPartyRepresentations;
			}
			set
			{
				this._ThirdPartyRepresentations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ThirdPartyRepresentations(ThirdPartyRepresentation entity)
		{
			this.SendPropertyChanging();
			entity.CustomerDetail1 = this;
		}
		
		private void detach_ThirdPartyRepresentations(ThirdPartyRepresentation entity)
		{
			this.SendPropertyChanging();
			entity.CustomerDetail1 = null;
		}
	}
}
#pragma warning restore 1591
